<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4022.18">
  <POU Name="FB_EpicsMotorMonitor" Id="{c6bf2af8-e9b0-4ebb-b06e-d35a94600f72}" SpecialFunc="None">
    <Declaration><![CDATA[(*
    EPICS Motor Record Monitoring tool

    Requires a "link" pragma to specify the motor record prefix.

*)
FUNCTION_BLOCK FB_EpicsMotorMonitor
VAR_INPUT
    bEnable : BOOL := TRUE;
END_VAR
VAR_OUTPUT
    bIsMoving : BOOL;
    fPosition : LREAL;
    nMSTA_Raw : UINT;
    stMSTA : DUT_EpicsMotorMSTA;
    bValid : BOOL;
END_VAR
VAR
    {attribute 'pytmc' := '
        pv: RBV_
        link: .RBV
    '}
    fbRBVCheck : FB_LREALFromEPICS;

    {attribute 'pytmc' := '
        pv: Dmov_
        link: .DMOV
    '}
    fbMovingCheck : FB_LREALFromEPICS;

    {attribute 'pytmc' := '
        pv: Msta_
        link: .MSTA
    '}
    fbMotorStatusCheck : FB_LREALFromEPICS;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[IF NOT bEnable THEN
    bValid := FALSE;
    RETURN;
END_IF

fbRBVCheck();
fbMovingCheck();
fbMotorStatusCheck();
bValid := (
    fbRBVCheck.bValid AND
    fbMovingCheck.bValid AND
    fbMotorStatusCheck.bValid
);
bIsMoving := ABS(fbMovingCheck.fValue) < 1e-5;
fPosition := fbRBVCheck.fValue;

nMSTA_Raw := LREAL_TO_UINT(fbMotorStatusCheck.fValue);
stMSTA.bPositiveDirection := nMSTA_Raw.0;
stMSTA.bDone := nMSTA_Raw.1;
stMSTA.bPlusLimitSwitch := nMSTA_Raw.2;
stMSTA.bHomeLimitSwitch := nMSTA_Raw.3;
stMSTA.bUnused0 := nMSTA_Raw.4;
stMSTA.bClosedLoop := nMSTA_Raw.5;
stMSTA.bSlipStall := nMSTA_Raw.6;
stMSTA.bHome := nMSTA_Raw.7;
stMSTA.bEncoderPresent := nMSTA_Raw.8;
stMSTA.bHardwareProblem := nMSTA_Raw.9;
stMSTA.bMoving := nMSTA_Raw.10;
stMSTA.bGainSupport := nMSTA_Raw.11;
stMSTA.bCommError := nMSTA_Raw.12;
stMSTA.bMinusLimitSwitch := nMSTA_Raw.13;
stMSTA.bHomed := nMSTA_Raw.14;]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>